<HTML><HEAD></HEAD>
<BODY>

<h1>EMSphInx</h1>
<p><em>EMSphInxEBSD</em> is a GUI for indexing EBSD patterns using spherical harmonics, part of the <a href="https://github.com/EMsoft-org/EMSphInx/">EMSphInx package</a>. EMSphInx is currently a public beta; please report bugs to the issue tracker. If you use these programs for research, consider citing the corresponding papers:</p>
<ul>
  <li><a href="https://doi.org/10.1016/j.ultramic.2019.112841" rel="nofollow">EBSD Indexing</a></li>
  <li><a href="https://doi.org/10.1107/S1600576719011233" rel="nofollow">Pseudo-symmetry Prediction</a></li>
</ul>
<h3>Financial Support</h3>
<p><em>EMSphInx</em> was developed with support from an ONR Vannevar Bush Faculty Fellowship grant, N00014-&shy;16-&shy;1-&shy;2821. The central indexing algorithm is covered by a provisional patent application.</p>
<h3>Master Pattern Database</h3>
<p>If you need master patterns consider using <a href="https://github.com/EMsoft-org/SHTdatabase">this database</a> in the new SHT file format.</p>


<h1>Main Window</h1>

<p>The main window consists of a menu bar (top), live indexing result (left), indexing parameters (right), and progress/status bar (bottom). To index an EBSD scan first specify the parameters by editing the summary panel directly, loading a namelist file, and/or using the wizard. Once the parameters are specified hit the 'Start' button and indexing will begin.</p>

<p>Indexer initialization may take several minutes on the first run as fourier transforms are being planned. To preplan ffts use the ShtWisdom program. You cancel indexing before it is complete, but the completed results will be lost.</p>
<h1>Menu Bar</h1>

<h3>File Menu</h3>
	<table style="border-collapse: collapse; width: 100%; " border="1">
	<tbody>
		<tr>
			<td><strong>Item</strong></td>
			<td><strong>Function</strong></td>
		</tr>
		<tr>
			<td>Open...</td>
			<td>load indexing parameters from a namelist (.nml) file</td>
		</tr>
		<tr>
			<td>Save...</td>
			<td>save current indexing parameters from a namelist (.nml) file</td>
		</tr>
		<tr>
			<td>Wizard...</td>
			<td>build indexing parameters interactively using the wizard (the wizard will be prepopulated with current values if possible)</td>
		</tr>
	</tbody>
</table>

<h3>Help Menu</h3>
	<table style="border-collapse: collapse; width: 100%; " border="1">
	<tbody>
		<tr>
			<td><strong>Item</strong></td>
			<td><strong>Function</strong></td>
		</tr>
		<tr>
			<td>About...</td>
			<td>display information about this program</td>
		</tr>
		<tr>
			<td>Citations...</td>
			<td>display relavent citations - both for this program and for any currently selected master patterns</td>
		</tr>
		<tr>
			<td>Help...</td>
			<td>launch the help browser</td>
		</tr>
	</tbody>
</table>
<h1>Parameter Summary Panel</h1>

<p>The parameter summary panel is split into 6 sections detailed below:</p>
<ol>
  <li>Input files - EBSD pattern source and simulated master pattern</li>
  <li>Pattern Processing - pattern size and image preprocessing</li>
  <li>Camera Calibration - detector geometry description</li>
  <li>Scan Information - orientation map dimensions and region of interest</li>
  <li>Indexing Parameters - spherical cross correlation and threading parameters</li>
  <li>Output Files - locations to save indexing results</li>
</ol>
<p>If you are uncomfortable filling parameters directly, use the wizard.</p>

<h3>Input Files</h3>
<table style="border-collapse: collapse; width: 100%; " border="1">
	<tbody>
		<tr>
			<td><strong>Name</strong></td>
			<td><strong>Type</strong></td>
			<td><strong>Value</strong></td>
		</tr>
		<tr>
			<td>patfile</td>
			<td>file</td>
			<td>EBSD patterns to index (<em>.up1,</em> .up2, <em>.ebsp, or</em> .h5)</td>
		</tr>
		<tr>
			<td>patdset</td>
			<td>string</td>
			<td>path to patterns within hdf5 file (ignored for other formats)</td>
		</tr>
		<tr>
			<td>masterfile</td>
			<td>file list</td>
			<td>spherical master pattern files to index against (.sht), first file is phase 0 in output, second file is phase 1, etc.</td>
		</tr>
	</tbody>
</table>

<h3><br />Pattern Processing</h3>
<table style="border-collapse: collapse; width: 100%;" border="1">
	<tbody>
		<tr>
			<td><strong>Name</strong></td>
			<td><strong>Type</strong></td>
			<td><strong>Value</strong></td>
		</tr>
		<tr>
			<td>patdims.w</td>
			<td>integer</td>
			<td>width of detector in pixels</td>
		</tr>
		<tr>
			<td>patdims.h</td>
			<td>integer</td>
			<td>height of detector in pixels</td>
		</tr>
		<tr>
			<td>circmask</td>
			<td>integer</td>
			<td>circular mask radius (-1 for no mask, 0 for inscribed circle, &gt;0 for radius in pixels)</td>
		</tr>
		<tr>
			<td>gausbckg</td>
			<td>boolean</td>
			<td>should a 2D gaussian background be subtracted from patterns</td>
		</tr>
		<tr>
			<td>nregions</td>
			<td>integer</td>
			<td>number of tiles for <a href="https://doi.org/10.1016/S0734-189X(87)80186-X">adaptive histogram equalization</a> (0 for no equalization)</td>
		</tr>
	</tbody>
</table>

<h3>Camera Calibration</h3>
<table style="border-collapse: collapse; width: 100%; " border="1">
	<tbody>
		<tr>
			<td><strong>Name</strong></td>
			<td><strong>Type</strong></td>
			<td><strong>Value</strong></td>
		</tr>
		<tr>
			<td>delta</td>
			<td>real</td>
			<td>detector pixel size in microns (i.e. patdims.w * delta is the width of the detector)</td>
		</tr>
		<tr>
			<td>vendor</td>
			<td>enum</td>
			<td>pattern center convention (EMsoft, Bruker, EDAX, or Oxford)</td>
		</tr>
		<tr>
			<td>pctr.x</td>
			<td>real</td>
			<td rowspan="3">pattern center calibration, see table below or refer to the <a href="https://doi.org/10.1184/R1/7792505">EMsoft tutorial paper</a> for details</td>
		</tr>
		<tr>
			<td>pctr.y</td>
			<td>real</td>
		</tr>
		<tr>
			<td>pctr.z</td>
			<td>real</td>
		</tr>
		<tr>
			<td>thetac</td>
			<td>real</td>
			<td>camera elevation angle in degrees, refer to the <a href="https://doi.org/10.1017/S1431927613001840">EMsoft EBSD forward model paper</a> for details</td>
		</tr>
	</tbody>
</table>

<p>Pattern Center Conventions:</p>
<table style="border-collapse: collapse; width: 100%; " border="1">
	<tbody>
		<tr>
			<td><strong>Name</strong></td>
			<td><strong>EMsoft</strong></td>
			<td><strong>Bruker</strong></td>
			<td><strong>EDAX</strong></td>
			<td><strong>Oxford</strong></td>
		</tr>
		<tr>
			<td>pctr.x</td>
			<td>pixels</td>
			<td>detector widths</td>
			<td>detector widths</td>
			<td>detector widths</td>
		</tr>
		<tr>
			<td>pctr.y</td>
			<td>pixels</td>
			<td>detector widths</td>
			<td>detector widths</td>
			<td>detector heights</td>
		</tr>
		<tr>
			<td>pctr.z</td>
			<td>microns</td>
			<td>detector heights</td>
			<td>detector widths</td>
			<td>detector widths</td>
		</tr>
		<tr>
			<td>origin</td>
			<td>center</td>
			<td>top left</td>
			<td>bottom left</td>
			<td>bottom left</td>
		</tr>
	</tbody>
</table>

<h3>Scan Information</h3>
<table style="border-collapse: collapse; width: 100%; " border="1">
	<tbody>
		<tr>
			<td><strong>Name</strong></td>
			<td><strong>Type</strong></td>
			<td><strong>Value</strong></td>
		</tr>
		<tr>
			<td>scandims.w</td>
			<td>integer</td>
			<td>width of scan grid in pixels</td>
		</tr>
		<tr>
			<td>scandims.h</td>
			<td>integer</td>
			<td>height of scan grid in pixels</td>
		</tr>
		<tr>
			<td>scandims.dx</td>
			<td>real</td>
			<td>width of grid pixel in microns</td>
		</tr>
		<tr>
			<td>scandims.dy</td>
			<td>real</td>
			<td>height of grid pixel in microns</td>
		</tr>
		<tr>
			<td>roimask</td>
			<td>string*</td>
			<td>string representation of region of interest to index (or empty to index everything)</td>
		</tr>
	</tbody>
</table>

<p>The ROI string is a series of (x,y) image coordinates (integer pixels) with 3 shapes defined:</p>
<ol>
  <li>Rectangle - first coordinate is origin, second coordiante is rectangle size</li>
  <li>Ellipse - 'e' + bounding box as rectangle</li>
  <li>Polygon - verticies in order (first/last point specified twice)</li>
</ol>
<p>The region of interested can be inverted (the excluded region selected instead of the included region) by prepending the string with 'i'. Here are some ROI string examples:</p>
<ul>
  <li>only points inside the rectangle with corners at (12, 34) and (56, 79) - "12, 34, 44, 45"</li>
  <li>the same rectangle specified as a polygon - "12, 34, 12, 79, 56, 79, 56, 34, 12, 34"</li>
  <li>only points outside the circle with radius 50 and center (60, 70) - "ie10, 20, 100, 100"</li>
</ul>
<p>If you're uncomfortable manipulating the ROI string please use the wizard.</p>

<h3>Indexing Parameters</h3>
<table style="border-collapse: collapse; width: 100%; " border="1">
<tbody>
<tr>
	<td><strong>Name</strong></td>
	<td><strong>Type</strong></td>
	<td><strong>Value</strong></td>
</tr>
<tr>
	<td>bw</td>
	<td>integer</td>
	<td>
<p>Bandwidth to index with - time scales as bw<sup>3</sup> * ln(bw<sup>3</sup>) so the lowest tolerable value should be used. The euler angle grid size is (2 * bw - 1)<sup>3</sup> so indexing is fastest when 2 * bw - 1 is a product of small primes. Slow sizes will be padded up to the nearest fast size so in practice most sizes efficient. Here are some reasonable ideal sizes:</p>
<ul>
<li>53, 63, 68, 74 - fast but somewhat noise sensitive</li>
<li>88, 95, 113, 123 - tradeoff between noise tolerance and speed</li>
<li>158, 172, 203, 221, 263 - maximum noise robustness but slow</li>
</ul>
</td>
</tr>
<tr>
	<td>normed</td>
	<td>boolean</td>
	<td>should normalized or unnormalized cross correlation be used for indexing - normalization is slightly slower but is suggested when pseudo-symmetry is anticipated or to index against multiple phases</td>
</tr>
<tr>
	<td>refine</td>
	<td>boolean</td>
	<td>should newtons method refinement be used - slower but improves precision</td>
</tr>
<tr>
	<td>nthread</td>
	<td>integer</td>
	<td>number of threads to index with (0 to determine from number of virtual cores) - performance seems to peak at ~1.5x the number of real cores</td>
</tr>
<tr>
	<td>batchsize</td>
	<td>integer</td>
	<td>number of patterns to dispatch to a thread at once (0 to estimate a reasonable number based on bw) - extremely small values will incur additional threading overhead but large values make the 'stop' button take longer to work</td>
</tr>
</tbody>
</table>

<h3>Output Files</h3>
	<table style="border-collapse: collapse; width: 100%; " border="1">
	<tbody>
		<tr>
			<td><strong>Name</strong></td>
			<td><strong>Type</strong></td>
			<td><strong>Value</strong></td>
		</tr>
		<tr>
			<td>datafile</td>
			<td>file</td>
			<td>location to write indexing results and meta data to (required)</td>
		</tr>
		<tr>
			<td>vendorfile</td>
			<td>file</td>
			<td>optional location to write vendor file (.ang or .ctf)</td>
		</tr>
		<tr>
			<td>ipfmap</td>
			<td>file</td>
			<td>optional location to write Z reference IPF map (.png)</td>
		</tr>
		<tr>
			<td>qualmap</td>
			<td>file</td>
			<td>optional location to write (normalized) spherical cross correlation map (.png)</td>
		</tr>
	</tbody>
</table>

<h1>Parameter Wizard</h1>
<p>The EBSD namelist generation wizard has 6 panels to interacitvely fill the required parameters for indexing:</p>
<ol>
  <li>Experimental Pattern Selection</li>
  <li>Master Pattern Selection</li>
  <li>Detector Geometry</li>
  <li>Scan Geometry</li>
  <li>Indexing Parameters</li>
  <li>Summary</li>
</ol>
<p>Any error messages are displayed in the status bar (bottom left)</p>

<h2>Example Data</h2>

<p>The full 10 scan sequence used in the <a href="https://doi.org/10.1016/j.ultramic.2019.112841">indexing</a> paper <a href="https://kilthub.cmu.edu/ndownloader/files/14503052">can be downloaded here</a>. The entire sequence is ~600 MB, a smaller file (~80 MB) containing only scan 10 is <a href="http://vbff.materials.cmu.edu/wp-content/uploads/2019/10/Hikari_Scan10.zip">also available</a>. A nickel master pattern corresponding to the scan conditions is in <a href="https://github.com/EMsoft-org/EMSphInx/blob/master/data/Ni%20%7B20kV%2075.7deg%7D.sht">the github repo</a></p>
<p>Reasonable selections to walk through the hikari dataset (only non-default values listed):</p>
<ol>
  <li>Experimental Pattern Selection
    <ul>
      <li>Pattern File: HikariNiSequence.h5 - Scan 10</li>
    </ul>
  </li>
  <li>Master Pattern Selection
    <ul>
      <li>Indexing Master Patterns: Ni {20kV 75.7deg}.sht</li>
    </ul>
  </li>
  <li>Detector Geometry
    <ul>
      <li>Binning: 1</li>
      <li>Binned Pixel Size: 475</li>
    </ul>
  </li>
  <li>Scan Geometry (no changes)</li>
  <li>Indexing Parameters
    <ul>
      <li>Bandwidth: 53</li>
      <li>Refinement: &#9745;</li>
    </ul>
  </li>
  <li>Summary (read only)</li>
</ol>
<h1>Parameter Wizard - Experimental Pattern Selection</h1>

<h3>Pattern File</h3>
<p>File to read EBSD patterns from. HDF5 (.h5, .hdf, .hdf5), EDAX (.up1, .up2), Oxford (.ebsp), and EMsoft (.data) files are supported. The pattern dimensions, bitdepth, and number of patterns will be determined automatically for all files except EMsoft raw files. Additional meta data will be parsed depending on file type</p>
<ul>
  <li>HDF5 EBSD scan files</li>
  <li>EDAX files when there is a .ang with the same path/name</li>
  <li>Oxford files when there is a .ctf with the same path/name</li>
</ul>
<p>The following additional metadata will be read and prepopulated if possible:</p>
<ul>
  <li>pattern center calibration</li>
  <li>detector tilt</li>
  <li>scan dimensions</li>
  <li>scan pixel size</li>
  <li>Pattern quality and indexing confidence maps (for ROI selection)</li>
</ul>
<h3>Pattern Info</h3>
<p>Detector geometry will be automatically determined for most file formats. Raw binary files require specifying the pattern size.</p>
<h3>Image Processing</h3>
<p>The easiest way to select parameters is with the 'Preview...' button. When the button is clicked 'Preview Count' evenly spaced patterns will be read from the file. The raw pattern is displayed on the left and the processed pattern on the right. Change which pattern is displayed with the scroll bar and adjust parameter values below. If the dialog is closed with the 'OK' button the current values will be populated into the wizard, otherwise they will be discarded.</p>
<p>If your pattern file doesn't have associated maps for ROI selection you can tick the 'Compute Image Quality Map for ROI Selection' box to calculate IQ during pattern loading. If the box is ticked a computed IQ map will be available on the 'Scan Geometry' page.</p>
<h1>Parameter Wizard - Master Pattern Selection </h1>

<h3>Indexing Master Patterns</h3>
<p>Spherical master patterns to index against. Multiple patterns can be selected for multi-phase indexing. The first pattern in the list is phase 0, the second phase 1, etc. Use the up/down arrow buttons (bottom left) to reorder patterns. Click the file brows button (bottom right) to browse for a single master pattern file (.sht) to add to the indexing list. Master patterns can be removed from the list by unticking the checkbox (OS X or Linux only) or double clicking.</p>
<h3>Master Pattern Library</h3>
<p>All previously used master patterns that aren't currently in the 'Indexing Master Patterns' box are listed here. Master patterns can be sorted by clicking on the column headers:</p>
<ul>
  <li>File - full path the master pattern file</li>
  <li>Formula - material formula string</li>
  <li>Name - material/phase name</li>
  <li>S.Syb - structure symbol</li>
  <li>kV - accelerating voltage</li>
  <li>Tilt - sample tilt (degrees)</li>
  <li>Laue - crystal Laue group</li>
  <li>SG# - space group number (effective for overlap patterns)</li>
</ul>
<p>Known master patterns can be permanently removed from the list by selecting and then pressing the delete button (bottom left). Displayed master patterns can be filtered by file, formula, name, or s.syb with the search bar (top). Use the search button (bottom left) to filter by kV, Tilt, SG#, and/or composition. All master pattern files in a folder (recursive) can be added with the directory browse button (bottom right). Master patterns can be move to the indexing list by ticking the checkbox (OS X or Linux only) or double clicking.</p>
<h1>Parameter Wizard - Detector Geometry </h1>

<h3>Pixel Size</h3>
<p>Indexing requires the effective pixel size of the EBSD patterns in microns. Most scintillator based detectors have a pixel size of 50-100 microns. However if the detector is binned the effective pixel size increases by the binning factor. The unbinned detector width is read only and specified in pixels (it is the size from the Experimental Pattern Selection page). Consider a 640x480 detector with 50 micron pixels used to collect patterns with 4x4 binning:</p>
<ul>
  <li>The pattern size is 160x120</li>
  <li>The effective pixel size is 200 microns (50 * 4)</li>
  <li>The detector width is 32 mm or 32000 microns (640 * 50 == 160 * 200)</li>
</ul>
<p>'Binned Pixel Size' is the effective pixel size assuming the patterns were collected using 'Binning' x 'Binning' camera binning. Assuming that 'Binning', 'Binned Pixel Size', and 'Detector Width' are specified, then changing one will update the others accordingly:</p>
<ul>
  <li>If 'Binning' is changed 'Binned Pixel Size' will be updated to keep 'Detector Width' constant</li>
  <li>If 'Binned Pixel Size' is changed 'Detector Width' will be updated using the current 'Binning'</li>
  <li>If 'Detector Width' is changed 'Binned Pixel Size' will be updated using the current 'Binning'</li>
</ul>
<p>For the above example, the following combinations are all valid. Binning == 1 uses the effective experimental parameters, binning == 4 allows specifying the true pixel size, and other values are mathematically equivalent:</p>
<table style="border-collapse: collapse; width: 75.4811%;" border="1">
  <tbody>
    <tr>
      <td style="width: 10.1075%;">Binning</td>
      <td style="width: 27.5268%;">Unbinned Detector Width</td>
      <td style="width: 20.1505%;">Binned Pixel Size</td>
      <td style="width: 17.6989%;">Detector Width</td>
    </tr>
    <tr>
      <td style="width: 10.1075%;">1</td>
      <td style="width: 27.5268%;">160 pixels</td>
      <td style="width: 20.1505%;">200 um</td>
      <td style="width: 17.6989%;">32 mm</td>
    </tr>
    <tr>
      <td style="width: 10.1075%;">2</td>
      <td style="width: 27.5268%;">320 pixels</td>
      <td style="width: 20.1505%;">100 um</td>
      <td style="width: 17.6989%;">32 mm</td>
    </tr>
    <tr>
      <td style="width: 10.1075%;">4</td>
      <td style="width: 27.5268%;">640 pixels</td>
      <td style="width: 20.1505%;">50 um</td>
      <td style="width: 17.6989%;">32 mm</td>
    </tr>
    <tr>
      <td style="width: 10.1075%;">8</td>
      <td style="width: 27.5268%;">1280 pixels</td>
      <td style="width: 20.1505%;">25 um</td>
      <td style="width: 17.6989%;">32 mm</td>
    </tr>
  </tbody>
</table>
<h3>Pattern Center</h3>
<p>The EMsoft pattern center is computed from the normalized pattern center using the binned pattern dimensions and pixel size. If the vendor dropdown is changed the normalized pattern center will be computed from the EMsoft pattern center using the current pixel size. The "Fit..." button is currently disabled but will be used for pattern center refinement in the future. Please refer to the <a href="https://doi.org/10.1184/R1/7792505">EMsoft tutorial paper</a> for details on pattern center</td>

</p>
<h1>Parameter Wizard - Scan Geometry</h1>

<h3>Scan Dimensions</h3>
<p>Specify the number or columns / rows in the EBSD map scan grid and the grid pixel size in microns</p>
<h3>Region of Interest</h3>
<p>A region of interest (ROI) can be used to restrict indexing to a subset of the scan. ROI building requires a grayscale map either computed or loaded during experimental pattern selection. The percentage of pixel contained in the ROI is displayed in the coverage box and the ROI can be removed (index everything) with the clear button. To draw an ROI interactively click the 'Select ROI...' button.</p>
<h5>ROI Drawing Dialog</h5>
<p>Select the ROI shape from the dropdown and draw a region accordingly. Pixels to index are unmodified and pixels to skip are grayed. Tick the inverted box to draw an exlusion region instead of an inclusion region. An existing ROI can be adjusted by clicking + dragging on a handle to change the shape or inside the selection to translate. If fine control on ROI positioning is needed the coordintes can be edited directly on the left.</p>
<ul>
  <li>Rectangle - click on origin + drag to extend (hold shift during drag for square)</li>
  <li>Ellipse - click on bounding box origin + drag to extend (hold shift during drag for circle)</li>
  <li>Polygon - click to start
    <ul>
      <li>During construction<br />
        <ul>
          <li>click to start / add a new point</li>
          <li>hold shift to snap line to horizontal or vertical</li>
          <li>press delete to remove the most recent point</li>
          <li>right click to close shape</li>
        </ul>
      </li>
      <li>After construction
        <ul>
          <li>right click on a point to remove it</li>
          <li>double click on a point to duplicate it (inserted after point)</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>
<h1>Parameter Wizard - Indexing Parameters </h1>

<h3>Indexing Parameters</h3>
<p>Specify the bandwidth, if normalize/unnormalized cross correlation should be used, and if newton's method based refiunement should be used.</p>
<h5>Bandwidth</h5>
<p>The smallest tolerable bandwidth should be used since indexing time scales as bw<sup>3</sup> * ln(bw<sup>3</sup>). The euler angle grid size is (2 * bw - 1)&lt;sup&gt;3&lt;/sup&gt; so indexing is fastest when 2 * bw - 1 is a product of small primes. Slow sizes will be padded up to the nearest fast size so in practice most sizes efficient. Here are some reasonable ideal sizes:</p>
<ul>
  <li>53, 63, 68, 74 - fast but somewhat noise sensitive</li>
  <li>88, 95, 113, 123 - tradeoff between noise tolerance and speed</li>
  <li>158, 172, 203, 221, 263 - maximum noise robustness but slow</li>
</ul>
<h5>Normalization</h5>
<p>Using normalized spherical cross correlation is slightly slower but is suggested when pseudo-symmetry is anticipated or to index against multiple phases.</p>
<h5>Refinement</h5>
<p>Newtons method refinement add some overhead but gives maximum orientation precision. If refinement is unticked then a sub-pixel maximum will be interpolated from the 3x3x3 box surrounding the maximum in the Euler angle grid.</p>
<h3>Output Files</h3>
<p>An output data file is required and contains the indexing results as well as all paramter metadata. A vendor file (ang or ctf) can be optionally generated to help import results into other software packages. Finally IPF (z reference) and spherical cross correlation maps (png) can be optionally generated.</p>
<h1>Parameter Wizard - Summary</h1>

<p>A read only summary of the generated parameters is displayed. Refer to the Paramter Summary Panel in the Main Window documentation for details.</p>
<h1>Licenses</h1>
<p><em>EMSphInx</em> source files are distributed under GNU General Public License v2.0 (GPL2), see the license pages for details. EMSphInx includes source from several other projects:</p>
<ul>
  <li><a href="http://fftw.org/">FFTW3</a> - GPL2 license<br />
    <ul>
      <li>(C) 2003, 2007-11 Matteo Frigo, Massachusetts Institute of Technology</li>
    </ul>
  </li>
  <li>several crystallographic and utility libraries - GPL2 licence<br />
    <ul>
      <li>(C) 2015-2019 William C. Lenthe</li>
    </ul>
  </li>
  <li><a href="https://www.wxwidgets.org/">wxWidgets</a> - wxWidgets licence<br />
    <ul>
      <li>(C) 1998-2005 Julian Smart, Robert Roebling et al</li>
    </ul>
  </li>
  <li><a href="https://github.com/richgel999/miniz">miniz</a> - BSD3 licence<br />
    <ul>
      <li>(C) 2013-2014 RAD Game Tools and Valve Software</li>
      <li>(C) 2010-2014 Rich Geldreich and Tenacious Software LLC</li>
    </ul>
  </li>
</ul>


<h1>GPL2 License</h1>

<h3><a id="SEC1"></a>GNU GENERAL PUBLIC LICENSE</h3>
<p>Version 2, June 1991</p>
<pre>Copyright (C) 1989, 1991 Free Software Foundation, Inc.  
51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
</pre>
<h3 id="preamble"><a id="SEC2"></a>Preamble</h3>
<p>The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.</p>
<p>When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.</p>
<p>To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.</p>
<p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.</p>
<p>We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.</p>
<p>Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.</p>
<p>Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.</p>
<p>The precise terms and conditions for copying, distribution and modification follow.</p>
<h3 id="terms"><a id="SEC3"></a>TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION</h3>
<p id="section0"><strong>0.</strong> This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The "Program", below, refers to any such program or work, and a "work based on the Program" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term "modification".) Each licensee is addressed as "you".</p>
<p>Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.</p>
<p id="section1"><strong>1.</strong> You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.</p>
<p>You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.</p>
<p id="section2"><strong>2.</strong> You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:</p>
<dl>
  <dt></dt>
  <dd><strong>a)</strong> You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.</dd>
  <dt></dt>
  <dd><strong>b)</strong> You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.</dd>
  <dt></dt>
  <dd><strong>c)</strong> If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)</dd>
</dl>
<p>These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.</p>
<p>Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.</p>
<p>In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.</p>
<p id="section3"><strong>3.</strong> You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:</p>
<dl>
  <dt></dt>
  <dd><strong>a)</strong> Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,</dd>
  <dt></dt>
  <dd><strong>b)</strong> Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,</dd>
  <dt></dt>
  <dd><strong>c)</strong> Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)</dd>
</dl>
<p>The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.</p>
<p>If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.</p>
<p id="section4"><strong>4.</strong> You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.</p>
<p id="section5"><strong>5.</strong> You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.</p>
<p id="section6"><strong>6.</strong> Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.</p>
<p id="section7"><strong>7.</strong> If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.</p>
<p>If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.</p>
<p>It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.</p>
<p>This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.</p>
<p id="section8"><strong>8.</strong> If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.</p>
<p id="section9"><strong>9.</strong> The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p>
<p>Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.</p>
<p id="section10"><strong>10.</strong> If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.</p>
<p id="section11"><strong>NO WARRANTY</strong></p>
<p><strong>11.</strong> BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p>
<p id="section12"><strong>12.</strong> IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>
<h3>END OF TERMS AND CONDITIONS</h3>

<h1>wxWidgets License</h1>

<pre class="highlight"><code>          wxWindows Library Licence, Version 3.1


              ======================================

Copyright (c) 1998-2005 Julian Smart, Robert Roebling et al

Everyone is permitted to copy and distribute verbatim copies
of this licence document, but changing it is not allowed.

                     WXWINDOWS LIBRARY LICENCE
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

This library is free software; you can redistribute it and/or modify it
under the terms of the GNU Library General Public Licence as published by
the Free Software Foundation; either version 2 of the Licence, or (at your
option) any later version.

This library is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
Licence for more details.

You should have received a copy of the GNU Library General Public Licence
along with this software, usually in a file named COPYING.LIB.  If not,
write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
Floor, Boston, MA 02110-1301 USA.

EXCEPTION NOTICE

1. As a special exception, the copyright holders of this library give
permission for additional uses of the text contained in this release of the
library as licenced under the wxWindows Library Licence, applying either
version 3.1 of the Licence, or (at your option) any later version of the
Licence as published by the copyright holders of version 3.1 of the Licence
document.

2. The exception is that you may use, copy, link, modify and distribute
under your own terms, binary object code versions of works based on the
Library.

3. If you copy code from files distributed under the terms of the GNU
General Public Licence or the GNU Library General Public Licence into a
copy of this library, as this licence permits, the exception does not apply
to the code that you add in this way.  To avoid misleading anyone as to the
status of such modified files, you must delete this exception notice from
such code and/or adjust the licensing conditions notice accordingly.

4. If you write modifications of your own for this library, it is your
choice whether to permit this exception to apply to your modifications.  If
you do not wish that, you must delete the exception notice from such code
and/or adjust the licensing conditions notice accordingly.</code></pre>

<h1>miniz License</h1>

<pre>Copyright 2013-2014 RAD Game Tools and Valve Software
Copyright 2010-2014 Rich Geldreich and Tenacious Software LLC

All Rights Reserved.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
</pre>
</BODY>
</HTML>
